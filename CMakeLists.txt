cmake_minimum_required(VERSION 3.13)
project(MAGIC)

set(CMAKE_EXPORT_COMPILE_COMMANDS TRUE)
set(CMAKE_INTERPROCEDURAL_OPTIMIZATION TRUE)
set(CMAKE_C_FLAGS "-march=native")
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG")
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O3 -g -ggdb")
set(CMAKE_C_FLAGS_DEBUG "-Og -g -fsanitize=address -fno-omit-frame-pointer")
set(CMAKE_INTERPROCEDURAL_OPTIMIZATION_DEBUG FALSE)

enable_testing()

find_program(BASH_PROGRAM bash)

function(add_enum_test test_name P)
  add_test(NAME ${test_name} COMMAND ${BASH_PROGRAM} ${CMAKE_CURRENT_SOURCE_DIR}/run.sh ${P} -ef --output-dir tests  WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})
endfunction()

function(add_arr_test test_name P S nsols)
  if(${S})
    add_test(NAME ${test_name} COMMAND ${BASH_PROGRAM} ${CMAKE_CURRENT_SOURCE_DIR}/run.sh ${P} --sum ${S} -af -pf --output-dir tests --expect-nsols ${nsols} WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})
  else()
    add_test(NAME ${test_name} COMMAND ${BASH_PROGRAM} ${CMAKE_CURRENT_SOURCE_DIR}/run.sh ${P} -af -pf --output-dir tests --expect-nsols ${nsols} WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})
  endif()
endfunction()

if (BASH_PROGRAM)
  add_enum_test(enum_10_4_3_2 "10 4 3 2")
  add_enum_test(enum_11_4_3_1_1 "11 4 3 1 1")
  add_enum_test(enum_11_5_3_2 "11 5 3 2")
  add_enum_test(enum_10_6_3_1_0_1 "10 6 3 1 0 1")
  add_arr_test(P_10_4_3_2_S_327 "10 4 3 2" 327 1)
  add_arr_test(P_10_4_3_2_S_350 "10 4 3 2" 350 0)
  add_arr_test(P_10_4_3_2 "10 4 3 2" 0 1)
  add_arr_test(P_11_4_3_1_1_S_289 "11 4 3 1 1" 289 1)
  add_arr_test(P_11_4_3_1_1_S_326 "11 4 3 1 1" 326 1)
  add_arr_test(P_11_4_3_1_1_S_470 "11 4 3 1 1" 470 1)
  add_arr_test(P_11_5_3_2_S_336 "11 5 3 2" 336 1)
  add_arr_test(P_11_5_3_2_S_401 "11 5 3 2" 401 1)
  add_arr_test(P_10_6_3_1_0_1_S_391 "10 6 3 1 0 1" 391 2)
  add_arr_test(P_10_6_3_1_0_1_S_648 "10 6 3 1 0 1" 648 1)
endif (BASH_PROGRAM)

add_subdirectory(src)
